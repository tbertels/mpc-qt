name: AppImage maker

on:
  [workflow_call]

jobs:
  appimage:
    name: Build with PPA
    runs-on: ubuntu-22.04
    steps:
    - name: Update repositories
      run: |
        sudo apt update
    - name: Install packages
      run: |
        sudo apt install build-essential cmake
    - name: Add repositories
      run: |
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/build-tools && break || sleep 60
        done
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/qt-6-2 && break || sleep 60
        done
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/llvm-defaults-13 && break || sleep 60
        done
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/graphics && break || sleep 60
        done
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/display && break || sleep 60
        done
        for i in 1 2 3; do
          sudo add-apt-repository ppa:savoury1/multimedia && break || sleep 60
        done
    - name: Update packages
      run: |
        for i in 1 2 3; do
          sudo apt upgrade && break || sleep 60
        done
        for i in 1 2 3; do
          sudo apt dist-upgrade && break || sleep 60
        done
    - name: Install packages
      run: |
        for i in 1 2 3; do
          sudo apt install linguist-qt6 qt6-tools-dev qmake6 qt6-base-dev libboost-all-dev libqt6svg6-dev && break || sleep 60
        done
        for i in 1 2 3; do
          sudo apt install devscripts equivs git libunwind-dev && break || sleep 60
        done
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Checkout mpv repository
      uses: actions/checkout@v4
      with:
        repository: "mpv-player/mpv-build"
        path: mpv-build
    - name: Copy build options
      run: |
        cp .github/actions/data/build_options/* mpv-build/
    - name: Get mpv dependencies
      run: |
        cd mpv-build
        sed -i '/libdisplay-info-dev/d' debian/control
        ./update
        cp debian/changelog.TEMPLATE debian/changelog
        mk-build-deps -s sudo -i
    - name: Build mpv package
      run: |
        cd mpv-build
        export DEB_BUILD_OPTIONS=nostrip
        dpkg-buildpackage -uc -us -b
    - name: Install mpv package
      run: |
        mv mpv-build/*.deb ./
        sudo dpkg -i *.deb
    - name: Set version
      run: |
        VERSION=$( cat .github/actions/data/VERSION )
        if [[ $VERSION == "GithubAction" ]]; then
          VERSION=$( date +'%Y.%m.%d' )
        fi
        echo "MPCQT_VERSION=$VERSION" >> $GITHUB_ENV
    - name: cmake
      run: cmake -DMPCQT_VERSION=$MPCQT_VERSION -G Ninja -B build
    - name: Build
      run: cmake --build build
    - name: ninja install
      run: DESTDIR=AppDir ninja -C build install
    - name: Install packages
      run: sudo apt install libfuse2 libqt6svg6-dev libqt6openglwidgets6
    - name: Download linuxdeploy
      uses: pcolby/install-linuxdeploy@v1
      with:
        arch: x86_64
        dir: linuxdeploy
        install-deps: false
        plugins: qt
        set-env: true
        version: 1-alpha-20240109-1
    - name: Build AppImage
      run: EXTRA_QT_PLUGINS="svg;" QMAKE=/usr/bin/qmake6 linuxdeploy/linuxdeploy-x86_64.AppImage --appdir AppDir -e bin/mpc-qt --custom-apprun ./AppImage/AppRun -d io.github.mpc_qt.mpc-qt.desktop -i images/icon/mpc-qt.svg --plugin qt --output appimage
    - name: Get version
      run: |
        if [[ "$GITHUB_REF" == *"refs/heads/release/"* ]]; then
          echo "MPC-QT_PACKAGE_VERSION=$(echo $GITHUB_REF | sed 's,refs/heads/release/,,g')">> $GITHUB_ENV
        else
          echo "MPC-QT_PACKAGE_VERSION=continuous">> $GITHUB_ENV
        fi
    - name: Rename AppImage
      run:  mv *.AppImage mpc-qt-${{env.MPC-QT_PACKAGE_VERSION}}-linux-x86_64.AppImage
    - name: Upload AppImage
      uses: actions/upload-artifact@v4
      with:
        name: "mpc-qt-x86_64-AppImage"
        path: ./mpc-qt[-_]*.AppImage
